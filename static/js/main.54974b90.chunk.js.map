{"version":3,"sources":["components/assets/pokemonTitle.png","components/Start.js","components/Pokemon.js","components/Team.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Start","className","src","title","alt","Component","Pokemon","this","props","name","image","full","missed","caught","onClick","catch","more","Team","border","team","return","App","catchPokemon","number","Math","floor","random","state","length","setState","tempTeam","caughtPokemon","pokemon","pokemonPicture","flavor","flavor_text_entries","flavor_text","push","fetchPokemon","axios","url","method","responseType","then","response","data","sprites","front_default","response2","morePokemon","returnPokemon","pokemonVisible","teamVisible","handlePage","page","startVisible","releasePokemon","removeIndex","newTeam","filter","_","index","yourPc","charAt","toUpperCase","slice","map","key","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.54974b90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemonTitle.3a977fee.png\";","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport title from './assets/pokemonTitle.png'; // generated from https://textcraft.net/style/Textcraft/pokemon\r\n\r\nclass Start extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"startBox\">\r\n                <img className=\"startImage\" src={title} alt=\"pokemon forest\"/>\r\n                <h2>Catch up to 151 Pokemon!</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Start;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Pokemon extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pokemonBox\">\r\n                <div className=\"pokemonFlexBox\">\r\n                    <h1>{this.props.name}</h1>\r\n                    <img src={this.props.image} alt={`A ${this.props.name} from the Pokemon series`}/>\r\n                </div>\r\n                <div className=\"pokemonControlBox\">\r\n                    <div className=\"pokemonMessageBox\">\r\n                        {/* full message */}\r\n                        {this.props.full ? \r\n                            <h2>You can only carry 6 pokemon at a time! Release some pokemon to catch more!</h2> \r\n                        : \r\n                            null}\r\n\r\n                        {/* missed message */}\r\n                        {this.props.missed ? \r\n                            <h2>You failed to catch {this.props.name}! Try again!</h2> \r\n                            : \r\n                            null}\r\n\r\n                        {/* caught message */}\r\n                        {this.props.caught ? \r\n                            <h2>You caught a {this.props.name}!</h2> \r\n                            : \r\n                            null}\r\n\r\n                        {/* Encounter Message */}\r\n                        {this.props.full !== true && this.props.caught !== true && this.props.missed !== true ? \r\n                            <h2>A wild {this.props.name} appeared!</h2> \r\n                            : \r\n                            null}\r\n\r\n                    </div>\r\n                \r\n                    <div className=\"pokemonButtonBox\">\r\n                        {/* Throw pokeball button */}\r\n                        {this.props.full !== true && this.props.caught !== true ? \r\n                            <button onClick={this.props.catch}>Throw Pokeball</button> \r\n                            : \r\n                            null}\r\n                        {/* Find more pokemon button */}\r\n                        {this.props.caught ? \r\n                            <button onClick=\r\n                            {this.props.more}>Find more Pokemon!</button> \r\n                            : \r\n                            null}\r\n                        {/* Run away button */}\r\n                        {this.props.full !== true && this.props.caught !== true ?\r\n                            <button onClick={this.props.more}>Run Away</button>\r\n                        :\r\n                            null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Pokemon;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Team extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"teamTitle\">\r\n            <img src=\"https://i.imgur.com/khwfmOZ.png\" border=\"0\" alt=\"Your Team\" />\r\n            </div>\r\n            <div className=\"teamBox\">\r\n                {this.props.team}\r\n            </div>\r\n            <div className=\"returnButton\">\r\n                <button onClick={this.props.return}>Return</button>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Team;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Start from './components/Start.js';\nimport Pokemon from './components/Pokemon.js';\nimport Team from './components/Team.js';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pokemon: [],\n      pokemonPicture: [],\n      team: [],\n      yourPc: [],\n      startVisible: true,\n      teamVisible: false,\n      pokemonVisible: false,\n      full: false,\n      missed: false,\n      caught: false,\n    }\n  }\n\n  componentDidMount() {\n    this.fetchPokemon();\n  }\n\n  catchPokemon = () => {\n    const number = Math.floor(Math.random() * 100) + 1;\n    if (this.state.team.length > 5) {\n      this.setState({\n        full: true,\n        caught: false,\n        missed: false,\n      });\n    } else if (number % 2 === 0) {\n      const tempTeam = [...this.state.team];\n      const caughtPokemon = {\n        name: this.state.pokemon.name,\n        image: this.state.pokemonPicture,\n        flavor: this.state.pokemon.flavor_text_entries[0].flavor_text,\n      };\n      tempTeam.push(caughtPokemon);\n      this.setState({\n        team: tempTeam,\n        caught: true,\n        missed: false,\n      });\n    } else {\n      this.setState({\n        missed: true,\n        caught: false,\n      });\n    }\n  }\n  \n  fetchPokemon = () => {\n    const number = Math.floor(Math.random() * 151) + 1;\n\n    axios({\n      url: 'https://pokeapi.co/api/v2/pokemon/' + number,\n      method: 'GET',\n      responseType: 'JSON',\n    }).then(response => {\n      const pokemonPicture = response.data.sprites.front_default;\n      this.setState({\n        pokemonPicture,\n      });\n      return axios({\n          url: 'https://pokeapi.co/api/v2/pokemon-species/' + number,\n          method: 'GET',\n          responseType: 'JSON',\n        })\n    }).then(response2 => {\n      const pokemon = response2.data;\n      this.setState({\n        pokemon,\n      });\n    })\n  }\n\n  morePokemon = () => {\n    this.setState({\n      caught: false,\n      missed: false,\n    });\n    this.fetchPokemon();\n  }\n\n  returnPokemon = () => {\n    this.setState({ \n      pokemonVisible: true,\n      teamVisible: false,\n    });\n  }\n\n  handlePage = (page) => {\n    if (page === \"start\") {\n      this.setState({ \n        startVisible: false,\n        pokemonVisible: true,\n      });\n    } else if (page === \"team\") {\n      this.setState({ \n        pokemonVisible: false,\n        teamVisible: true,\n      });\n    } else if (page ===\"return\") {\n      this.setState({ \n        pokemonVisible: true,\n        teamVisible: false,\n      });      \n    }\n  }\n\n  releasePokemon = (removeIndex) => {\n    const oldTeam = [...this.state.team];\n    const newTeam = oldTeam.filter((_, index) => {\n      return removeIndex !== index;\n    });\n    this.setState({\n      team: newTeam,\n      full: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Start Screen */}\n        {this.state.startVisible ? \n          <Start /> \n          : \n          null}\n\n        {/* Pokemon Screen */}\n        {this.state.pokemonVisible ? \n          <Pokemon \n            image={this.state.pokemonPicture} \n            name={this.state.pokemon.name.charAt(0).toUpperCase() + this.state.pokemon.name.slice(1)} \n            catch={() => this.catchPokemon()} \n            caught={this.state.caught} \n            more={() => this.morePokemon()} \n            missed={this.state.missed} \n            full={this.state.full} /> \n          : \n          null }\n\n        {/* Team Screen */}\n        {this.state.teamVisible ? \n        <Team \n          team={this.state.team.map((pokemon, index) => {\n            return (\n              <div className=\"teamPokemon\" key={index}>\n                <img src={pokemon.image} alt={`A ${pokemon.name} from the Pokemon series`}/>\n                <div className=\"textBox\">\n                  <h2>{pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}</h2>\n                  <p>{pokemon.flavor}</p>\n                </div>\n                <button className=\"releaseButton\" onClick={() => this.releasePokemon(index)}>Release</button>\n              </div>\n            )\n          })} \n          return={() => {this.handlePage(\"return\");}} /> \n        : \n          null}\n        \n        <div className=\"startAndTeam\">\n          {/* Start Button */}\n          {this.state.startVisible ?\n            <button onClick = {() => this.handlePage(\"start\")}>Click here to start</button>\n          :\n            null}\n\n          {/* Team Button */}\n          {this.state.teamVisible !== true && this.state.pokemonVisible ?\n            <button className=\"teamButton\" onClick = {() => this.handlePage(\"team\")}>Team</button>\n          :\n            null}\n        </div>\n        <footer><p>Created by Jason Kuo at<a href=\"https://junocollege.com/\" >Juno College</a></p></footer>    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}